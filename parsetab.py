
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCONCATleftMASMENOSleftPORDIVIDIDOrightUMENOSCADENA CONCAT DECIMAL DIVIDIDO ENTERO FUNCION ID IGUAL IGUALQUE IMPRIMIR LLAVDER LLAVIZQ MAS MAYQUE MENOS MENQUE MIENTRASQ NIGUALQUE NUMERO PARDER PARIZQ POR PTCOMA SI SINOinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr\n                        | definicion_instr\n                        | asignacion_instr\n                        | mientrasq_instr\n                        | si_instr\n                        | si_sino_instrimprimir_instr     : IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMAdefinicion_instr   : NUMERO ID PTCOMAasignacion_instr   : ID IGUAL expresion_numerica PTCOMAmientrasq_instr     : MIENTRASQ PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDERsi_instr           : SI PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDERsi_sino_instr      : SI PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER SINO LLAVIZQ instrucciones LLAVDERexpresion_numerica : expresion_numerica MAS expresion_numerica\n                        | expresion_numerica MENOS expresion_numerica\n                        | expresion_numerica POR expresion_numerica\n                        | expresion_numerica DIVIDIDO expresion_numericaexpresion_numerica : MENOS expresion_numerica %prec UMENOSexpresion_numerica : PARIZQ expresion_numerica PARDERexpresion_numerica : ENTERO\n                        | DECIMALexpresion_numerica   : IDexpresion_cadena     : expresion_cadena CONCAT expresion_cadenaexpresion_cadena     : CADENAexpresion_cadena     : expresion_numericaexpresion_logica : expresion_numerica MAYQUE expresion_numerica\n                        | expresion_numerica MENQUE expresion_numerica\n                        | expresion_numerica IGUALQUE expresion_numerica\n                        | expresion_numerica NIGUALQUE expresion_numerica'
    
_lr_action_items = {'IMPRIMIR':([0,2,3,4,5,6,7,8,9,15,29,42,50,56,61,62,63,64,65,67,68,69,],[10,10,-3,-4,-5,-6,-7,-8,-9,-2,-11,-12,-10,10,10,10,10,-13,-14,10,10,-15,]),'NUMERO':([0,2,3,4,5,6,7,8,9,15,29,42,50,56,61,62,63,64,65,67,68,69,],[11,11,-3,-4,-5,-6,-7,-8,-9,-2,-11,-12,-10,11,11,11,11,-13,-14,11,11,-15,]),'ID':([0,2,3,4,5,6,7,8,9,11,15,16,18,19,20,21,25,29,36,37,38,39,40,42,44,45,46,47,50,56,61,62,63,64,65,67,68,69,],[12,12,-3,-4,-5,-6,-7,-8,-9,17,-2,28,28,28,28,28,28,-11,28,28,28,28,28,-12,28,28,28,28,-10,12,12,12,12,-13,-14,12,12,-15,]),'MIENTRASQ':([0,2,3,4,5,6,7,8,9,15,29,42,50,56,61,62,63,64,65,67,68,69,],[13,13,-3,-4,-5,-6,-7,-8,-9,-2,-11,-12,-10,13,13,13,13,-13,-14,13,13,-15,]),'SI':([0,2,3,4,5,6,7,8,9,15,29,42,50,56,61,62,63,64,65,67,68,69,],[14,14,-3,-4,-5,-6,-7,-8,-9,-2,-11,-12,-10,14,14,14,14,-13,-14,14,14,-15,]),'$end':([1,2,3,4,5,6,7,8,9,15,29,42,50,64,65,69,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-2,-11,-12,-10,-13,-14,-15,]),'LLAVDER':([3,4,5,6,7,8,9,15,29,42,50,62,63,64,65,68,69,],[-3,-4,-5,-6,-7,-8,-9,-2,-11,-12,-10,64,65,-13,-14,69,-15,]),'PARIZQ':([10,13,14,16,18,19,20,21,25,36,37,38,39,40,44,45,46,47,],[16,19,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'IGUAL':([12,],[18,]),'CADENA':([16,36,],[23,23,]),'MENOS':([16,18,19,20,21,24,25,26,27,28,30,32,34,36,37,38,39,40,41,44,45,46,47,49,52,53,54,55,57,58,59,60,],[25,25,25,25,25,38,25,-22,-23,-24,38,38,38,25,25,25,25,25,-20,25,25,25,25,-21,-16,-17,-18,-19,38,38,38,38,]),'ENTERO':([16,18,19,20,21,25,36,37,38,39,40,44,45,46,47,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'DECIMAL':([16,18,19,20,21,25,36,37,38,39,40,44,45,46,47,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'PTCOMA':([17,26,27,28,30,35,41,49,52,53,54,55,],[29,-22,-23,-24,42,50,-20,-21,-16,-17,-18,-19,]),'PARDER':([22,23,24,26,27,28,31,33,34,41,49,51,52,53,54,55,57,58,59,60,],[35,-26,-27,-22,-23,-24,43,48,49,-20,-21,-25,-16,-17,-18,-19,-28,-29,-30,-31,]),'CONCAT':([22,23,24,26,27,28,41,49,51,52,53,54,55,],[36,-26,-27,-22,-23,-24,-20,-21,-25,-16,-17,-18,-19,]),'MAS':([24,26,27,28,30,32,34,41,49,52,53,54,55,57,58,59,60,],[37,-22,-23,-24,37,37,37,-20,-21,-16,-17,-18,-19,37,37,37,37,]),'POR':([24,26,27,28,30,32,34,41,49,52,53,54,55,57,58,59,60,],[39,-22,-23,-24,39,39,39,-20,-21,39,39,-18,-19,39,39,39,39,]),'DIVIDIDO':([24,26,27,28,30,32,34,41,49,52,53,54,55,57,58,59,60,],[40,-22,-23,-24,40,40,40,-20,-21,40,40,-18,-19,40,40,40,40,]),'MAYQUE':([26,27,28,32,41,49,52,53,54,55,],[-22,-23,-24,44,-20,-21,-16,-17,-18,-19,]),'MENQUE':([26,27,28,32,41,49,52,53,54,55,],[-22,-23,-24,45,-20,-21,-16,-17,-18,-19,]),'IGUALQUE':([26,27,28,32,41,49,52,53,54,55,],[-22,-23,-24,46,-20,-21,-16,-17,-18,-19,]),'NIGUALQUE':([26,27,28,32,41,49,52,53,54,55,],[-22,-23,-24,47,-20,-21,-16,-17,-18,-19,]),'LLAVIZQ':([43,48,66,],[56,61,67,]),'SINO':([65,],[66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,56,61,67,],[2,62,63,68,]),'instruccion':([0,2,56,61,62,63,67,68,],[3,15,3,3,15,15,3,15,]),'imprimir_instr':([0,2,56,61,62,63,67,68,],[4,4,4,4,4,4,4,4,]),'definicion_instr':([0,2,56,61,62,63,67,68,],[5,5,5,5,5,5,5,5,]),'asignacion_instr':([0,2,56,61,62,63,67,68,],[6,6,6,6,6,6,6,6,]),'mientrasq_instr':([0,2,56,61,62,63,67,68,],[7,7,7,7,7,7,7,7,]),'si_instr':([0,2,56,61,62,63,67,68,],[8,8,8,8,8,8,8,8,]),'si_sino_instr':([0,2,56,61,62,63,67,68,],[9,9,9,9,9,9,9,9,]),'expresion_cadena':([16,36,],[22,51,]),'expresion_numerica':([16,18,19,20,21,25,36,37,38,39,40,44,45,46,47,],[24,30,32,32,34,41,24,52,53,54,55,57,58,59,60,]),'expresion_logica':([19,20,],[31,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','LexAPar.py',116),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','LexAPar.py',120),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','LexAPar.py',126),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','LexAPar.py',130),
  ('instruccion -> definicion_instr','instruccion',1,'p_instruccion','LexAPar.py',131),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','LexAPar.py',132),
  ('instruccion -> mientrasq_instr','instruccion',1,'p_instruccion','LexAPar.py',133),
  ('instruccion -> si_instr','instruccion',1,'p_instruccion','LexAPar.py',134),
  ('instruccion -> si_sino_instr','instruccion',1,'p_instruccion','LexAPar.py',135),
  ('imprimir_instr -> IMPRIMIR PARIZQ expresion_cadena PARDER PTCOMA','imprimir_instr',5,'p_instruccion_imprimir','LexAPar.py',139),
  ('definicion_instr -> NUMERO ID PTCOMA','definicion_instr',3,'p_instruccion_definicion','LexAPar.py',143),
  ('asignacion_instr -> ID IGUAL expresion_numerica PTCOMA','asignacion_instr',4,'p_asignacion_instr','LexAPar.py',147),
  ('mientrasq_instr -> MIENTRASQ PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER','mientrasq_instr',7,'p_mientrasq_instr','LexAPar.py',151),
  ('si_instr -> SI PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER','si_instr',7,'p_si_instr','LexAPar.py',155),
  ('si_sino_instr -> SI PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER SINO LLAVIZQ instrucciones LLAVDER','si_sino_instr',11,'p_si_sino_instr','LexAPar.py',159),
  ('expresion_numerica -> expresion_numerica MAS expresion_numerica','expresion_numerica',3,'p_expresion_binaria','LexAPar.py',163),
  ('expresion_numerica -> expresion_numerica MENOS expresion_numerica','expresion_numerica',3,'p_expresion_binaria','LexAPar.py',164),
  ('expresion_numerica -> expresion_numerica POR expresion_numerica','expresion_numerica',3,'p_expresion_binaria','LexAPar.py',165),
  ('expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica','expresion_numerica',3,'p_expresion_binaria','LexAPar.py',166),
  ('expresion_numerica -> MENOS expresion_numerica','expresion_numerica',2,'p_expresion_unaria','LexAPar.py',173),
  ('expresion_numerica -> PARIZQ expresion_numerica PARDER','expresion_numerica',3,'p_expresion_agrupacion','LexAPar.py',177),
  ('expresion_numerica -> ENTERO','expresion_numerica',1,'p_expresion_number','LexAPar.py',181),
  ('expresion_numerica -> DECIMAL','expresion_numerica',1,'p_expresion_number','LexAPar.py',182),
  ('expresion_numerica -> ID','expresion_numerica',1,'p_expresion_id','LexAPar.py',186),
  ('expresion_cadena -> expresion_cadena CONCAT expresion_cadena','expresion_cadena',3,'p_expresion_concatenacion','LexAPar.py',190),
  ('expresion_cadena -> CADENA','expresion_cadena',1,'p_expresion_cadena','LexAPar.py',194),
  ('expresion_cadena -> expresion_numerica','expresion_cadena',1,'p_expresion_cadena_numerico','LexAPar.py',198),
  ('expresion_logica -> expresion_numerica MAYQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','LexAPar.py',202),
  ('expresion_logica -> expresion_numerica MENQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','LexAPar.py',203),
  ('expresion_logica -> expresion_numerica IGUALQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','LexAPar.py',204),
  ('expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','LexAPar.py',205),
]
